//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRUD.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/autorizado", ReplyAction="http://tempuri.org/IService1/autorizadoResponse")]
        bool autorizado(string rut, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/autorizado", ReplyAction="http://tempuri.org/IService1/autorizadoResponse")]
        System.Threading.Tasks.Task<bool> autorizadoAsync(string rut, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/rol", ReplyAction="http://tempuri.org/IService1/rolResponse")]
        int rol(string rut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/rol", ReplyAction="http://tempuri.org/IService1/rolResponse")]
        System.Threading.Tasks.Task<int> rolAsync(string rut);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : CRUD.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<CRUD.ServiceReference1.IService1>, CRUD.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool autorizado(string rut, string pass) {
            return base.Channel.autorizado(rut, pass);
        }
        
        public System.Threading.Tasks.Task<bool> autorizadoAsync(string rut, string pass) {
            return base.Channel.autorizadoAsync(rut, pass);
        }
        
        public int rol(string rut) {
            return base.Channel.rol(rut);
        }
        
        public System.Threading.Tasks.Task<int> rolAsync(string rut) {
            return base.Channel.rolAsync(rut);
        }
    }
}
